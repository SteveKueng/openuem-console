package partials

import (
	"fmt"
	"github.com/labstack/echo/v4"
)

templ SortByColumnIcon(c echo.Context, p PaginationAndSort, sortBy, sortIcon, target, swap, include string) {
	<button
		type="submit"
		hx-post={ c.Request().RequestURI }
		hx-push-url="true"
		hx-target={ target }
		hx-swap={ swap }
		hx-include={ include }
		title="sortBy"
		_={ fmt.Sprintf(`
		on htmx:configRequest			
			set event.detail.parameters['sortBy'] to '%s'
			set event.detail.parameters['sortOrder'] to '%s'
		end
		`, sortBy, newSortOrder(p.SortOrder)) }
	>
		<div class={ "p-1 text-muted-foreground", templ.KV("bg-muted", sortBy == p.SortBy) }>
			if sortBy != p.SortBy || newSortOrder(p.SortOrder) == "asc" && sortBy == p.SortBy {
				switch sortIcon {
					case "alpha":
						<uk-icon hx-history="false" icon="arrow-up-a-z" custom-class="h-5 w-5" uk-cloack></uk-icon>
					case "numeric":
						<uk-icon hx-history="false" icon="arrow-down-0-1" custom-class="h-5 w-5" uk-cloack></uk-icon>
					case "time":
						<uk-icon hx-history="false" icon="clock-arrow-down" custom-class="h-5 w-5" uk-cloack></uk-icon>
				}
			} else {
				switch sortIcon {
					case "alpha":
						<uk-icon hx-history="false" icon="arrow-down-z-a" custom-class="h-5 w-5" uk-cloack></uk-icon>
					case "numeric":
						<uk-icon hx-history="false" icon="arrow-up-1-0" custom-class="h-5 w-5" uk-cloack></uk-icon>
					case "time":
						<uk-icon hx-history="false" icon="clock-arrow-up" custom-class="h-5 w-5" uk-cloack></uk-icon>
				}
			}
		</div>
	</button>
}

func newSortOrder(sortOrder string) string {
	if sortOrder == "asc" {
		return "desc"
	}
	return "asc"
}
