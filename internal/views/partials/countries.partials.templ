package partials

import (
	"github.com/biter777/countries"
	"github.com/invopop/ctxi18n/i18n"
	"github.com/labstack/echo/v4"
	"strings"
)

type Country struct {
	Name string
	Code string
}

templ Countries(c echo.Context, code string) {
	<div class="flex gap-4">
		<div id="flag" class={ "fi", "fi-" + strings.ToLower(code) }></div>
		<select id="country" name="country" class="uk-select" autocomplete="off" _="on change get #country.value.toLowerCase then set #flag[@class] to `fi fi-${it}`  end">
			for _, country := range GetCountries(c) {
				<option value={ country.Code } selected?={ code == country.Code }>{ country.Name }</option>
			}
		</select>
	</div>
}

func GetCountries(c echo.Context) []Country {
	var translatedCountries []Country

	for _, country := range countries.All() {
		if country.String() != "Yugoslavia" {
			translatedCountries = append(translatedCountries, Country{
				Name: i18n.T(c.Request().Context(), "countries."+country.String()),
				Code: country.Info().Alpha2,
			})
		}
	}
	return translatedCountries
}
