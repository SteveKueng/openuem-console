package partials

import (
	"context"
	"fmt"
	"github.com/doncicuto/openuem-console/internal/controllers/sessions"
	"github.com/invopop/ctxi18n/i18n"
)

type Breadcrumb struct {
	Title string
	Url   string
}

templ Header(breadcrumbs []Breadcrumb, sm *sessions.SessionManager) {
	<header class="sticky top-0 z-30 uk-flex uk-flex-between@s w-full h-14 items-center border-b bg-background px-4 sm:static sm:h-auto sm:border-0 sm:bg-transparent sm:px-6">
		<nav id="header">
			<ul class="uk-breadcrumb" aria-label="Breadcrumb">
				<li>OpenUEM</li>
				for _,bc := range breadcrumbs {
					<li>
						<a
							href={ templ.URL(bc.Url) }
							hx-get={ string(templ.URL(bc.Url)) }
							hx-target="#main"
							hx-swap="outerHTML"
							hx-push-url="true"
						>
							{ i18n.T(ctx, bc.Title, i18n.Default(bc.Title)) }
						</a>
					</li>
				}
			</ul>
		</nav>
		<button title={ i18n.T(ctx, "Profile") } type="button" class="rounded-full"><uk-icon hx-history="false" icon="user-circle" hx-history="false" custom-class="h-6 w-6" uk-cloack></uk-icon></button>
		<div class="uk-drop uk-dropdown" uk-dropdown="mode: click">
			<div class="flex flex-col gap-1">
				<div class="flex justify-center mt-4 mb-1">
					<uk-icon hx-history="false" icon="circle-user" custom-class="h-14 w-14 text-green-800" uk-cloack></uk-icon>
				</div>
				<p class="text-center uk-text-muted uk-text-small">{ GetUID(ctx, sm) }</p>
				<p class="text-center">{ GetUsername(ctx, sm) }</p>
				<button
					title={ i18n.T(ctx, "LogOut") }
					href="/logout"
					hx-post="/logout"
					hx-push-url="false"
					hx-target="body"
					uk-tooltip={ fmt.Sprintf("title: %s; pos: right", i18n.T(ctx, "LogOut")) }
					class={ "flex gap-2 items-center justify-center p-1 mb-4" }
				>
					<span class="uk-text-small uk-text-muted underline">{ i18n.T(ctx, "LogOut") }</span>
				</button>
			</div>
		</div>
	</header>
}

func GetUID(ctx context.Context, sm *sessions.SessionManager) string {
	uid, ok := sm.Manager.Get(ctx, "uid").(string)
	if !ok || len(uid) == 0 {
		return "unknown"
	}

	return uid
}

func GetUsername(ctx context.Context, sm *sessions.SessionManager) string {
	username, ok := sm.Manager.Get(ctx, "username").(string)
	if !ok {
		return ""
	}

	return username
}
