package computers_views

import (
	"fmt"
	"github.com/invopop/ctxi18n/i18n"
	"github.com/labstack/echo/v4"
	ent "github.com/open-uem/ent"
	"github.com/open-uem/ent/user"
	"github.com/open-uem/openuem-console/internal/controllers/sessions"
	"github.com/open-uem/openuem-console/internal/views/partials"
)

templ Printers(c echo.Context, p partials.PaginationAndSort, sm *sessions.SessionManager, currentVersion, latestVersion string, agent *ent.Agent, confirmDelete, detectRemoteAgents bool) {
	@partials.Header([]partials.Breadcrumb{{Title: "Computers", Url: "/computers"}, {Title: agent.Hostname, Url: fmt.Sprintf("/computers/%s", agent.ID)}}, sm, currentVersion, latestVersion)
	<main class="grid flex-1 items-start gap-4 p-4 sm:px-6 sm:py-0 md:gap-8">
		<div class="uk-width-1-2@m uk-card uk-card-default">
			<div class="uk-card-body uk-flex uk-flex-column gap-4">
				<div class="flex gap-2 items-center">
					<div class="flex items-center gap-4">
						@partials.OSBadge(agent.Os)
						<span class="uk-text-bold uk-text-large">{ agent.Hostname }</span>
					</div>
					@partials.ShowAppliedTags(agent.Edges.Tags, agent.ID, p, "/computers", "#main", "outerHTML")
					if agent.IsRemote && detectRemoteAgents {
						<span uk-tooltip={ fmt.Sprintf("title: %s", i18n.T(ctx, "agents.is_remote")) }>
							<uk-icon hx-history="false" icon="plane" custom-class="h-6 w-6 text-blue-600" uk-cloack></uk-icon>
						</span>
					}
				</div>
				@ComputersNavbar(agent.ID, "printers", agent.VncProxyPort, confirmDelete)
				if confirmDelete {
					@partials.ConfirmDeleteAgent(c, i18n.T(ctx, "agents.confirm_delete"), "/computers", "/computers/"+agent.ID)
				}
				<div class="uk-width-1-2@m uk-card uk-card-default">
					<div class="uk-card-header">
						<div class="flex items-center gap-2">
							<uk-icon hx-history="false" icon="printer" custom-class="h-5 w-5" uk-cloack></uk-icon>
							<h3 class="uk-card-title">{ i18n.T(ctx, "inventory.printers.title") }</h3>
						</div>
						<p class="uk-margin-small-top uk-text-small">
							{ i18n.T(ctx, "inventory.printers.description") }
						</p>
					</div>
				</div>
				<div class="uk-card uk-card-body uk-card-default">
					if len(agent.Edges.Printers) > 0 {
						<table class="uk-table uk-table-divider uk-table-small uk-table-striped -mt-4">
							<thead>
								<tr>
									<th>{ i18n.T(ctx, "Name") }</th>
									<th>{ i18n.T(ctx, "inventory.printers.port") }</th>
									<th>{ i18n.T(ctx, "inventory.printers.is_default") }</th>
									<th>{ i18n.T(ctx, "inventory.printers.is_network_printer") }</th>
									<th>{ i18n.T(ctx, "inventory.printers.is_shared_printer") }</th>
									<th>
										<div class="flex gap-1 items-center">
											<span class="sr-only">{ i18n.T(ctx, "Actions") }</span>
										</div>
									</th>
								</tr>
							</thead>
							for index, printer := range agent.Edges.Printers {
								<tr>
									<td>{ printer.Name }</td>
									<td>{ printer.Port }</td>
									if printer.IsDefault {
										@partials.Checkmark()
									} else {
										<td>-</td>
									}
									if printer.IsNetwork {
										@partials.Checkmark()
									} else {
										<td>-</td>
									}
									if printer.IsShared {
										@partials.Checkmark()
									} else {
										<td>-</td>
									}
									<td>
										@partials.MoreButton(index)
										<div class="uk-drop uk-dropdown" uk-dropdown="mode: click">
											<ul class="uk-dropdown-nav uk-nav" _={ fmt.Sprintf("on click call #moreButton%d.click()", index) }>
												<li>
													<a
														hx-post={ string(templ.URL(fmt.Sprintf("/admin/users/%s/confirmemail", user.ID))) }
														hx-target="#main"
														hx-push-url="false"
														hx-swap="outerHTML"
													>
														<uk-icon hx-history="false" icon="printer-check" custom-class="h-6 w-6 pr-2" uk-cloack></uk-icon>{ i18n.T(ctx, "inventory.printers.set_default") }
													</a>
												</li>
												<li>
													<a
														hx-get={ string(templ.URL(fmt.Sprintf("/computers/%s?delete=true", agent.ID))) }
														hx-push-url="false"
														hx-target="#main"
														hx-swap="outerHTML"
													><uk-icon hx-history="false" icon="trash-2" custom-class="h-6 w-6 pr-2 text-red-600" uk-cloack></uk-icon> { i18n.T(ctx, "Delete") }</a>
												</li>
											</ul>
										</div>
									</td>
								</tr>
							}
						</table>
					} else {
						<p class="uk-text-small uk-text-muted">
							{ i18n.T(ctx, "inventory.printers.no_printers") }
						</p>
					}
				</div>
			</div>
		</div>
	</main>
}
