package computers_views

import (
	"fmt"
	"github.com/doncicuto/openuem-console/internal/views/partials"
	ent "github.com/doncicuto/openuem_ent"
	"github.com/invopop/ctxi18n/i18n"
	"strconv"
)

templ LogicalDisks(agent *ent.Agent, confirmDelete bool) {
	@partials.Header([]partials.Breadcrumb{{Title: "Computers", Url: "/computers"}, {Title: agent.Hostname, Url: fmt.Sprintf("/computers/%s", agent.ID)}})
	<main class="grid flex-1 items-start gap-4 p-4 sm:px-6 sm:py-0 md:gap-8">
		<div class="uk-width-1-2@m uk-card uk-card-default">
			<div class="uk-card-body uk-flex uk-flex-column gap-4">
				if confirmDelete {
					@partials.ConfirmDelete("Are you sure that you want to delete this agent and all its associated information? Note that this action is irreversible and it's considered destructive", "/computers", "/computers/"+agent.ID)
				}
				@ComputersNavbar(agent.ID, "logical-disks", confirmDelete)
				<div id="error" class="hidden"></div>
				<div class="uk-width-1-2@m uk-card uk-card-default">
					<div class="uk-card-header">
						<h3 class="uk-card-title">{ i18n.T(ctx, "inventory.logical_disk.title") }</h3>
						<p class="uk-margin-small-top uk-text-small">
							{ i18n.T(ctx, "inventory.logical_disk.description") }
						</p>
					</div>
				</div>
				<div class="uk-card uk-card-body uk-card-default">
					if len(agent.Edges.Logicaldisks) > 0 {
						<table class="uk-table uk-table-divider uk-table-small uk-table-striped -mt-4">
							<thead>
								<tr>
									<th>{ i18n.T(ctx, "inventory.logical_disk.label") }</th>
									<th>{ i18n.T(ctx, "inventory.logical_disk.volume_name") }</th>
									<th>{ i18n.T(ctx, "inventory.logical_disk.filesystem") }</th>
									<th>{ i18n.T(ctx, "inventory.logical_disk.usage") }</th>
									<th>{ i18n.T(ctx, "inventory.logical_disk.total_size") }</th>
									<th>{ i18n.T(ctx, "inventory.logical_disk.remaining_space") }</th>
									<th>{ i18n.T(ctx, "inventory.logical_disk.bitlocker") }</th>
									<th>{ i18n.T(ctx, "inventory.file_browser.title") }</th>
								</tr>
							</thead>
							for i, disk := range agent.Edges.Logicaldisks {
								<tr>
									<td class="!align-middle">{ disk.Label }</td>
									if disk.VolumeName == "" {
										<td class="!align-middle">-</td>
									} else {
										<td class="!align-middle">{ disk.VolumeName }</td>
									}
									<td class="!align-middle">{ disk.Filesystem }</td>
									<td class="!align-middle">
										<progress
											class="uk-progress !mb-0"
											value={ strconv.Itoa(int(disk.Usage)) }
											max="100"
										></progress>
									</td>
									<td class="!align-middle">{ disk.SizeInUnits }</td>
									<td class="!align-middle">{ disk.RemainingSpaceInUnits }</td>
									<td class="!align-middle">
										@partials.BitlockerStatus(disk.BitlockerStatus)
									</td>
									<td class="!align-middle">
										<form>
											<input type="hidden" name="cwd" value={ disk.Label + "\\" }/>
											<button
												class="flex gap-2 items-center"
												type="button"
												hx-post={ string(templ.URL(fmt.Sprintf("/computers/%s/logical-disks", agent.ID))) }
												hx-target="#main"
												hx-push-url="false"
												hx-swap="outerHTML"
												hx-indicator={ fmt.Sprintf("#file-browser-%d", i) }
											>
												<uk-icon icon="folder-open" custom-class="h-5 w-5 text-yellow-700 fill-yellow-500" hx-history="false" uk-cloak></uk-icon>
												<div id={ fmt.Sprintf("file-browser-%d", i) } class="ml-2 htmx-indicator" hx-history="false" uk-spinner="ratio: 0.5" uk-spinner></div>
											</button>
										</form>
									</td>
								</tr>
							}
						</table>
					} else {
						<p class="uk-text-small uk-text-muted mt-6 mb-4">
							{ i18n.T(ctx, "inventory.logical_disk.no_logical_disks") }
						</p>
					}
				</div>
			</div>
		</div>
	</main>
}
