package filters

import (
	"fmt"
	ent "github.com/doncicuto/openuem_ent"
	"slices"
)

templ FilterByTags(f AgentFilter, url, target, swap string, tags []*ent.Tag) {
	<button title="Filter by tags" type="button">
		if len(f.Tags) > 0 {
			<uk-icon icon="filter" hx-history="false" custom-class="mr-2 h-5 w-5 fill-red-500 text-red-500" uk-cloak></uk-icon>
		} else {
			<uk-icon icon="filter" hx-history="false" custom-class="mr-2 h-5 w-5" uk-cloak></uk-icon>
		}
	</button>
	<div class="uk-drop uk-dropdown" uk-dropdown="mode: click">
		<ul class="uk-dropdown-nav uk-nav">
			for _, tag := range tags {
				<li class="p-2">
					<input
						id={ fmt.Sprintf("filterByTag%d", tag.ID) }
						name={ fmt.Sprintf("filterByTag%d", tag.ID) }
						type="checkbox"
						value={ tag.Tag }
						class="uk-checkbox mx-3"
						hx-post={ url }
						hx-push-url="false"
						hx-target={ target }
						hx-swap={ swap }
						checked?={ isFilteredByTag(tag.ID, f) }
					/>
					<label for={ fmt.Sprintf("filterByTag%d", tag.ID) }>{ tag.Tag }</label>
				</li>
			}
		</ul>
	</div>
}

func isFilteredByTag(id int, f AgentFilter) bool {
	return slices.Contains(f.Tags, id)
}
