package filters

import (
	"fmt"
	"github.com/doncicuto/openuem-console/internal/views/partials"
	ent "github.com/doncicuto/openuem_ent"
	"github.com/invopop/ctxi18n/i18n"
	"github.com/labstack/echo/v4"
	"slices"
	"strconv"
)

templ FilterByTags(c echo.Context, p partials.PaginationAndSort, f AgentFilter, target, swap string, tags []*ent.Tag, disableFunc func() bool) {
	<button title={ i18n.T(ctx, "tags.filter_by") } type="button">
		if len(f.Tags) > 0 {
			<uk-icon icon="filter" hx-history="false" custom-class="mr-2 h-5 w-5 fill-red-500 text-red-500" uk-cloak></uk-icon>
		} else {
			<uk-icon icon="filter" hx-history="false" custom-class="mr-2 h-5 w-5" uk-cloak></uk-icon>
		}
	</button>
	<div class="uk-drop uk-dropdown" uk-dropdown="mode: click">
		<form class="flex flex-col pt-4 pl-4 pb-6 pr-8 gap-4">
			<input type="hidden" name="page" value="1"/>
			<input type="hidden" name="pageSize" value={ strconv.Itoa(p.PageSize) }/>
			<input type="hidden" name="sortBy" value={ p.SortBy }/>
			<input type="hidden" name="sortOrder" value={ p.SortOrder }/>
			for _, tag := range tags {
				<div class="my-2 w-full">
					<input
						id={ fmt.Sprintf("filterByTag%d", tag.ID) }
						name={ fmt.Sprintf("filterByTag%d", tag.ID) }
						type="checkbox"
						value={ tag.Tag }
						class="uk-checkbox mx-3"
						checked?={ isFilteredByTag(tag.ID, f) }
					/>
					<label for={ fmt.Sprintf("filterByTag%d", tag.ID) }>{ tag.Tag }</label>
				</div>
			}
			<button
				type="button"
				class="uk-button uk-button-primary mx-2 w-full"
				hx-get={ c.Request().URL.Path }
				hx-push-url="true"
				hx-target={ target }
				hx-swap={ swap }
				hx-include="input[name^='filterBy']"
				_="on htmx:configRequest
					set event.detail.parameters['filterBySelectedItems'] to '0'
				end"
			>
				{ i18n.T(ctx, "Filter") }
			</button>
			@ClearFilter(c, "filterByTag", target, swap, disableFunc)
		</form>
	</div>
}

func isFilteredByTag(id int, f AgentFilter) bool {
	return slices.Contains(f.Tags, id)
}
