package desktops_views

import (
	"fmt"
	"github.com/doncicuto/openuem-console/internal/views/partials"
	ent "github.com/doncicuto/openuem_ent"
	"github.com/invopop/ctxi18n/i18n"
	"strconv"
)

templ LogicalDisks(agent *ent.Agent, confirmDelete bool) {
	@partials.Header([]partials.Breadcrumb{{Title: "Desktops", Url: "/desktops"}, {Title: agent.Hostname, Url: fmt.Sprintf("/desktops/%s", agent.ID)}})
	<main class="grid flex-1 items-start gap-4 p-4 sm:px-6 sm:py-0 md:gap-8">
		<div class="uk-width-1-2@m uk-card uk-card-default">
			<div class="uk-card-body uk-flex uk-flex-column gap-4">
				if confirmDelete {
					@partials.ConfirmDelete("Are you sure that you want to delete this agent and all its associated information? Note that this action is irreversible and it's considered destructive", "/desktops", "/desktops/"+agent.ID)
				}
				@DesktopsNavbar(agent.ID, "logical-disks", confirmDelete)
				<div id="error" class="hidden"></div>
				<div class="uk-width-1-2@m uk-card uk-card-default">
					<div class="uk-card-header">
						<h3 class="uk-card-title">{ i18n.T(ctx, "inventory.logical_disk.title") }</h3>
						<p class="uk-margin-small-top uk-text-small">
							{ i18n.T(ctx, "inventory.logical_disk.description") }
						</p>
					</div>
					<div class="uk-card-body">
						if len(agent.Edges.Logicaldisks) > 0 {
							<table class="uk-table uk-table-divider uk-table-small uk-table-striped">
								<thead>
									<tr>
										<th>{ i18n.T(ctx, "inventory.logical_disk.label") }</th>
										<th>{ i18n.T(ctx, "inventory.logical_disk.volume_name") }</th>
										<th>{ i18n.T(ctx, "inventory.logical_disk.filesystem") }</th>
										<th>{ i18n.T(ctx, "inventory.logical_disk.usage") }</th>
										<th>{ i18n.T(ctx, "inventory.logical_disk.total_size") }</th>
										<th>{ i18n.T(ctx, "inventory.logical_disk.remaining_space") }</th>
										<th>{ i18n.T(ctx, "inventory.logical_disk.bitlocker") }</th>
										<th>{ i18n.T(ctx, "inventory.file_browser.title") }</th>
									</tr>
								</thead>
								for i, disk := range agent.Edges.Logicaldisks {
									<tr>
										<td>{ disk.Label }</td>
										if disk.VolumeName == "" {
											<td>-</td>
										} else {
											<td>{ disk.VolumeName }</td>
										}
										<td>{ disk.Filesystem }</td>
										<td>
											<progress
												class="uk-progress"
												value={ strconv.Itoa(int(disk.Usage)) }
												max="100"
											></progress>
										</td>
										<td>{ disk.SizeInUnits }</td>
										<td>{ disk.RemainingSpaceInUnits }</td>
										<td>
											@partials.BitlockerStatus(disk.BitlockerStatus)
										</td>
										<td>
											<form>
												<input type="hidden" name="cwd" value={ disk.Label + "\\" }/>
												<button
													class="flex gap-2 items-center"
													type="button"
													hx-post={ string(templ.URL(fmt.Sprintf("/desktops/%s/logical-disks", agent.ID))) }
													hx-target="#main"
													hx-push-url="false"
													hx-swap="outerHTML"
													hx-indicator={ fmt.Sprintf("#file-browser-%d", i) }
												>
													<uk-icon icon="folder-open" custom-class="h-5 w-5 text-yellow-700 fill-yellow-500" hx-history="false" uk-cloak></uk-icon>
													<div id={ fmt.Sprintf("file-browser-%d", i) } class="ml-2 htmx-indicator" hx-history="false" uk-spinner="ratio: 0.5" uk-spinner></div>
												</button>
											</form>
										</td>
									</tr>
								}
							</table>
						} else {
							<p class="uk-text-small uk-text-muted my-4">
								{ i18n.T(ctx, "inventory.logical_disk.no_logical_disks") }
							</p>
						}
					</div>
				</div>
			</div>
		</div>
	</main>
}
